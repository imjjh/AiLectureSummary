version: "3.8"

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod # 배포용
      args:
        NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL}
    container_name: ai_lecture_frontend
    ports:
      - "3000:3000"
    working_dir: /app
    env_file:
      - ./.env.frontend
    restart: always

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod # 배포용
    container_name: ai_lecture_backend
    ports:
      - "8080:8080"
    stdin_open: true
    tty: true
    depends_on:
      - mysql
    env_file:
      - ./.env.backend
    # restart: always

  mysql:
    image: mysql:8.0
    container_name: mysql
    ports:
      - "${MYSQL_PORT}:3306"
    volumes:
      - ./mysql-prod-data:/var/lib/mysql
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    env_file:
      - ./.env.db
    # restart: always

  fastapi:
    build:
      context: ./fastapi
      dockerfile: Dockerfile
    ports:
      - "9090:9090"
    depends_on:
      - backend
    # restart: always
    env_file:
      - ./.env.fastapi

volumes:
  mysql-prod-data:
