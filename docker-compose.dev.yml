version: "3.8"

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev # 개발용
    container_name: frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    working_dir: /app
    env_file:
      - ./.env.frontend

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev # 개발용
    container_name: backend
    ports:
      - "8080:8080"
    volumes:
      - ./backend/src:/app/src
      - ./backend/build.gradle:/app/build.gradle
      - ./backend/settings.gradle:/app/settings.gradle
      - ./backend/gradle:/app/gradle
    stdin_open: true
    tty: true
    depends_on:
      - mysql
    env_file:
      - ./.env.backend

  mysql:
    image: mysql:8.0
    ports:
      - "${MYSQL_PORT}:3306"
    volumes:
      # mysql-data 없으면 자동 생성
      - ./mysql-data:/var/lib/mysql
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    env_file:
      - ./.env.db

  fastapi:
    build:
      context: ./fastapi
      dockerfile: Dockerfile
    ports:
      - "9090:9090"
    volumes:
      - ./fastapi:/app
    depends_on:
      - backend
    restart: always
    env_file:
      - ./.env.fastapi
